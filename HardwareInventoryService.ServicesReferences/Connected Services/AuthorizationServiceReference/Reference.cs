//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HardwareInventoryService.ServicesReferences.AuthorizationServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuthorizationServiceReference.IAuthorizationWCFContract")]
    public interface IAuthorizationWCFContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationWCFContract/Authorize", ReplyAction="http://tempuri.org/IAuthorizationWCFContract/AuthorizeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HardwareInventoryService.Models.Models.ExceptionDetail), Action="http://tempuri.org/IAuthorizationWCFContract/AuthorizeExceptionDetailFault", Name="ExceptionDetail", Namespace="http://schemas.datacontract.org/2004/07/HardwareInventoryService.Models.Models")]
        HardwareInventoryService.Models.Models.Authorization.Session Authorize(HardwareInventoryService.Models.Models.Authorization.Session authData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationWCFContract/Authorize", ReplyAction="http://tempuri.org/IAuthorizationWCFContract/AuthorizeResponse")]
        System.Threading.Tasks.Task<HardwareInventoryService.Models.Models.Authorization.Session> AuthorizeAsync(HardwareInventoryService.Models.Models.Authorization.Session authData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationWCFContract/Deauthorize", ReplyAction="http://tempuri.org/IAuthorizationWCFContract/DeauthorizeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HardwareInventoryService.Models.Models.ExceptionDetail), Action="http://tempuri.org/IAuthorizationWCFContract/DeauthorizeExceptionDetailFault", Name="ExceptionDetail", Namespace="http://schemas.datacontract.org/2004/07/HardwareInventoryService.Models.Models")]
        bool Deauthorize(HardwareInventoryService.Models.Models.Authorization.Session authData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationWCFContract/Deauthorize", ReplyAction="http://tempuri.org/IAuthorizationWCFContract/DeauthorizeResponse")]
        System.Threading.Tasks.Task<bool> DeauthorizeAsync(HardwareInventoryService.Models.Models.Authorization.Session authData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationWCFContract/ChangePassword", ReplyAction="http://tempuri.org/IAuthorizationWCFContract/ChangePasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HardwareInventoryService.Models.Models.ExceptionDetail), Action="http://tempuri.org/IAuthorizationWCFContract/ChangePasswordExceptionDetailFault", Name="ExceptionDetail", Namespace="http://schemas.datacontract.org/2004/07/HardwareInventoryService.Models.Models")]
        bool ChangePassword(string username, string password, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationWCFContract/ChangePassword", ReplyAction="http://tempuri.org/IAuthorizationWCFContract/ChangePasswordResponse")]
        System.Threading.Tasks.Task<bool> ChangePasswordAsync(string username, string password, string newPassword);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthorizationWCFContractChannel : HardwareInventoryService.ServicesReferences.AuthorizationServiceReference.IAuthorizationWCFContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorizationWCFContractClient : System.ServiceModel.ClientBase<HardwareInventoryService.ServicesReferences.AuthorizationServiceReference.IAuthorizationWCFContract>, HardwareInventoryService.ServicesReferences.AuthorizationServiceReference.IAuthorizationWCFContract {
        
        public AuthorizationWCFContractClient() {
        }
        
        public AuthorizationWCFContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthorizationWCFContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorizationWCFContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorizationWCFContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HardwareInventoryService.Models.Models.Authorization.Session Authorize(HardwareInventoryService.Models.Models.Authorization.Session authData) {
            return base.Channel.Authorize(authData);
        }
        
        public System.Threading.Tasks.Task<HardwareInventoryService.Models.Models.Authorization.Session> AuthorizeAsync(HardwareInventoryService.Models.Models.Authorization.Session authData) {
            return base.Channel.AuthorizeAsync(authData);
        }
        
        public bool Deauthorize(HardwareInventoryService.Models.Models.Authorization.Session authData) {
            return base.Channel.Deauthorize(authData);
        }
        
        public System.Threading.Tasks.Task<bool> DeauthorizeAsync(HardwareInventoryService.Models.Models.Authorization.Session authData) {
            return base.Channel.DeauthorizeAsync(authData);
        }
        
        public bool ChangePassword(string username, string password, string newPassword) {
            return base.Channel.ChangePassword(username, password, newPassword);
        }
        
        public System.Threading.Tasks.Task<bool> ChangePasswordAsync(string username, string password, string newPassword) {
            return base.Channel.ChangePasswordAsync(username, password, newPassword);
        }
    }
}
